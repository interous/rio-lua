'console singleton

'A '^int4 unit
'B '^int4 unit

'A 'A 'A derive+
'B 'B 'B derive+
'A 'A 'B derive*
'A derive=
'B derive=

'print 'console {
  'val bind
  "stdio.h" backend-include
  { val 0 #idx type-at '__quote quote->type = }
  { "printf(\"" val "\\n\");" ++ ++ backend-code }
  { val 7 B = }
  { "printf(\"%d\\n\", " val thunk->quote ");" ++ ++ backend-code }
  { val 14 B = }
  { "printf(\"%d\\n\", " val 1 B + thunk->quote ");" ++ ++ backend-code }
  { "printf(\"???\\n\");" backend-code }
  if
} write

{ ''hello eval print 3 B 2 A 2 A * + 'x bind x x + print 'world print } finalize
